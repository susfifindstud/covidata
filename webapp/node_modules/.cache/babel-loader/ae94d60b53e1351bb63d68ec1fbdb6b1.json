{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n  displayName: 'Cell',\n  propTypes: {\n    fill: React.PropTypes.string,\n    width: React.PropTypes.number,\n    height: React.PropTypes.number,\n    label: React.PropTypes.string\n  },\n  render: function () {\n    var props = this.props;\n    var textStyle = {\n      'textAnchor': 'middle',\n      'fill': props.textColor,\n      'fontSize': props.fontSize\n    };\n    var t = \"translate(\" + props.x + \", \" + props.y + \"  )\";\n    return React.createElement(\"g\", {\n      transform: t\n    }, React.createElement(\"rect\", {\n      className: \"rd3-treemap-cell\",\n      width: props.width,\n      height: props.height,\n      fill: props.fill,\n      onMouseOver: props.handleMouseOver,\n      onMouseLeave: props.handleMouseLeave\n    }), React.createElement(\"text\", {\n      x: props.width / 2,\n      y: props.height / 2,\n      dy: \".35em\",\n      style: textStyle,\n      className: \"rd3-treemap-cell-text\"\n    }, props.label));\n  }\n});","map":{"version":3,"sources":["/Users/Susan/Desktop/covidata/my-app/node_modules/react-d3/treemap/Cell.js"],"names":["React","require","d3","module","exports","createClass","displayName","propTypes","fill","PropTypes","string","width","number","height","label","render","props","textStyle","textColor","fontSize","t","x","y","createElement","transform","className","onMouseOver","handleMouseOver","onMouseLeave","handleMouseLeave","dy","style"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AAGAE,MAAM,CAACC,OAAP,GAAiBJ,KAAK,CAACK,WAAN,CAAkB;AAEjCC,EAAAA,WAAW,EAAE,MAFoB;AAIjCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAER,KAAK,CAACS,SAAN,CAAgBC,MADb;AAETC,IAAAA,KAAK,EAAEX,KAAK,CAACS,SAAN,CAAgBG,MAFd;AAGTC,IAAAA,MAAM,EAAEb,KAAK,CAACS,SAAN,CAAgBG,MAHf;AAITE,IAAAA,KAAK,EAAEd,KAAK,CAACS,SAAN,CAAgBC;AAJd,GAJsB;AAWjCK,EAAAA,MAAM,EAAC,YAAW;AAEhB,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AAEA,QAAIC,SAAS,GAAG;AACd,oBAAc,QADA;AAEd,cAAQD,KAAK,CAACE,SAFA;AAGd,kBAAYF,KAAK,CAACG;AAHJ,KAAhB;AAMA,QAAIC,CAAC,GAAI,eAAeJ,KAAK,CAACK,CAArB,GAAyB,IAAzB,GAAgCL,KAAK,CAACM,CAAtC,GAA0C,KAAnD;AAEA,WACEtB,KAAK,CAACuB,aAAN,CAAoB,GAApB,EAAyB;AAACC,MAAAA,SAAS,EAAEJ;AAAZ,KAAzB,EACEpB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAC1BE,MAAAA,SAAS,EAAE,kBADe;AAE1Bd,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFa;AAG1BE,MAAAA,MAAM,EAAEG,KAAK,CAACH,MAHY;AAI1BL,MAAAA,IAAI,EAAEQ,KAAK,CAACR,IAJc;AAK1BkB,MAAAA,WAAW,EAAEV,KAAK,CAACW,eALO;AAM1BC,MAAAA,YAAY,EAAEZ,KAAK,CAACa;AANM,KAA5B,CADF,EASE7B,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAC1BF,MAAAA,CAAC,EAAEL,KAAK,CAACL,KAAN,GAAc,CADS;AAE1BW,MAAAA,CAAC,EAAEN,KAAK,CAACH,MAAN,GAAe,CAFQ;AAG1BiB,MAAAA,EAAE,EAAE,OAHsB;AAI1BC,MAAAA,KAAK,EAAEd,SAJmB;AAK1BQ,MAAAA,SAAS,EAAE;AALe,KAA5B,EAOET,KAAK,CAACF,KAPR,CATF,CADF;AAqBD;AA5CgC,CAAlB,CAAjB","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Cell',\n\n  propTypes: {\n    fill: React.PropTypes.string,\n    width: React.PropTypes.number,\n    height: React.PropTypes.number,\n    label: React.PropTypes.string\n  },\n\n  render:function() {\n\n    var props = this.props;\n    \n    var textStyle = {\n      'textAnchor': 'middle',\n      'fill': props.textColor,\n      'fontSize': props.fontSize\n    };\n\n    var t = (\"translate(\" + props.x + \", \" + props.y + \"  )\");\n\n    return (\n      React.createElement(\"g\", {transform: t}, \n        React.createElement(\"rect\", {\n          className: \"rd3-treemap-cell\", \n          width: props.width, \n          height: props.height, \n          fill: props.fill, \n          onMouseOver: props.handleMouseOver, \n          onMouseLeave: props.handleMouseLeave}\n        ), \n        React.createElement(\"text\", {\n          x: props.width / 2, \n          y: props.height / 2, \n          dy: \".35em\", \n          style: textStyle, \n          className: \"rd3-treemap-cell-text\"\n        }, \n          props.label\n        )\n      )\n    );\n  }\n});\n"]},"metadata":{},"sourceType":"script"}