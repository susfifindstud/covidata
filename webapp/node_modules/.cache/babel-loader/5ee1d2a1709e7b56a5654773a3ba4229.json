{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Susan/Desktop/covidata/my-app/src/AnimatedPieSVG.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport * as d3 from \"d3\";\nconst colors = d3.scaleOrdinal(d3.schemeCategory10);\nconst format = d3.format(\".2f\");\nconst animationDuration = 250;\nconst animationConfig = {\n  to: async (next, cancel) => {\n    await next({\n      t: 1\n    });\n  },\n  from: {\n    t: 0\n  },\n  config: {\n    duration: animationDuration\n  },\n  reset: true\n};\n\nconst Arc = ({\n  index,\n  from,\n  to,\n  createArc,\n  colors,\n  format,\n  animatedProps\n}) => {\n  const interpolator = d3.interpolate(from, to);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"arc\",\n    children: [/*#__PURE__*/_jsxDEV(animated.path, {\n      className: \"arc\",\n      d: animatedProps.t.interpolate(t => createArc(interpolator(t))),\n      fill: colors(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.text, {\n      transform: animatedProps.t.interpolate(t => `translate(${createArc.centroid(interpolator(t))})`),\n      textAnchor: \"middle\",\n      alignmentBaseline: \"middle\",\n      fill: \"white\",\n      fontSize: \"10\",\n      children: animatedProps.t.interpolate(t => format(interpolator(t).value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Arc;\n\nconst Pie = props => {\n  _s();\n\n  const cache = useRef([]);\n  const createPie = d3.pie().value(d => d.value).sort(null);\n  const createArc = d3.arc().innerRadius(props.innerRadius).outerRadius(props.outerRadius);\n  const data = createPie(props.data);\n  const previousData = createPie(cache.current);\n  const [animatedProps, setAnimatedProps] = useSpring(() => animationConfig);\n  setAnimatedProps(animationConfig);\n  useEffect(() => {\n    cache.current = props.data;\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: props.width,\n    height: props.height,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${props.outerRadius} ${props.outerRadius})`,\n      children: data.map((d, i) => /*#__PURE__*/_jsxDEV(Arc, {\n        index: i,\n        from: previousData[i],\n        to: d,\n        createArc: createArc,\n        colors: colors,\n        format: format,\n        animatedProps: animatedProps\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pie, \"kCNtHaqOTnx6tx+MeAHaHvDW004=\", false, function () {\n  return [useSpring];\n});\n\n_c2 = Pie;\nexport default Pie;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Arc\");\n$RefreshReg$(_c2, \"Pie\");","map":{"version":3,"sources":["/Users/Susan/Desktop/covidata/my-app/src/AnimatedPieSVG.js"],"names":["React","useEffect","useRef","animated","useSpring","d3","colors","scaleOrdinal","schemeCategory10","format","animationDuration","animationConfig","to","next","cancel","t","from","config","duration","reset","Arc","index","createArc","animatedProps","interpolator","interpolate","centroid","value","Pie","props","cache","createPie","pie","d","sort","arc","innerRadius","outerRadius","data","previousData","current","setAnimatedProps","width","height","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport * as d3 from \"d3\";\n\nconst colors = d3.scaleOrdinal(d3.schemeCategory10);\nconst format = d3.format(\".2f\");\nconst animationDuration = 250;\nconst animationConfig = {\n  to: async (next, cancel) => {\n    await next({ t: 1 });\n  },\n  from: { t: 0 },\n  config: { duration: animationDuration },\n  reset: true\n};\n\nconst Arc = ({ index, from, to, createArc, colors, format, animatedProps }) => {\n  const interpolator = d3.interpolate(from, to);\n\n  return (\n    <g key={index} className=\"arc\">\n      <animated.path\n        className=\"arc\"\n        d={animatedProps.t.interpolate(t => createArc(interpolator(t)))}\n        fill={colors(index)}\n      />\n      <animated.text\n        transform={animatedProps.t.interpolate(\n          t => `translate(${createArc.centroid(interpolator(t))})`\n        )}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n        fill=\"white\"\n        fontSize=\"10\"\n      >\n        {animatedProps.t.interpolate(t => format(interpolator(t).value))}\n      </animated.text>\n    </g>\n  );\n};\n\nconst Pie = props => {\n  const cache = useRef([]);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const data = createPie(props.data);\n  const previousData = createPie(cache.current);\n\n  const [animatedProps, setAnimatedProps] = useSpring(() => animationConfig);\n  setAnimatedProps(animationConfig);\n\n  useEffect(() => {\n    cache.current = props.data;\n  });\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g transform={`translate(${props.outerRadius} ${props.outerRadius})`}>\n        {data.map((d, i) => (\n          <Arc\n            key={i}\n            index={i}\n            from={previousData[i]}\n            to={d}\n            createArc={createArc}\n            colors={colors}\n            format={format}\n            animatedProps={animatedProps}\n          />\n        ))}\n      </g>\n    </svg>\n  );\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}