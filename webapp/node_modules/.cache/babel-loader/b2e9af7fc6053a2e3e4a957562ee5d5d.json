{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar DataSeries = require('./DataSeries');\n\nvar $__0 = require('../common'),\n    Chart = $__0.Chart,\n    XAxis = $__0.XAxis,\n    YAxis = $__0.YAxis;\n\nvar $__1 = require('../mixins'),\n    CartesianChartPropsMixin = $__1.CartesianChartPropsMixin,\n    ViewBoxMixin = $__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n  mixins: [CartesianChartPropsMixin, ViewBoxMixin],\n  displayName: 'AreaChart',\n  propTypes: {\n    margins: React.PropTypes.object,\n    interpolate: React.PropTypes.bool,\n    interpolationType: React.PropTypes.string,\n    hoverAnimation: React.PropTypes.bool\n  },\n  getDefaultProps: function () {\n    return {\n      margins: {\n        top: 10,\n        right: 20,\n        bottom: 40,\n        left: 45\n      },\n      yAxisTickCount: 4,\n      interpolate: false,\n      interpolationType: null,\n      className: 'rd3-areachart',\n      hoverAnimation: true\n    };\n  },\n  render: function () {\n    var props = this.props;\n    var data = props.data;\n    var interpolationType = props.interpolationType || (props.interpolate ? 'cardinal' : 'linear'); // Calculate inner chart dimensions\n\n    var innerWidth, innerHeight;\n    innerWidth = this.getOuterDimensions().width - props.margins.left - props.margins.right;\n    innerHeight = this.getOuterDimensions().height - props.margins.top - props.margins.bottom;\n\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    var yScale = d3.scale.linear().range([innerHeight, 0]);\n    var xValues = [];\n    var yValues = [];\n    var seriesNames = [];\n    var yMaxValues = [];\n    data.forEach(function (series) {\n      var upper = 0;\n      seriesNames.push(series.name);\n      series.values.forEach(function (val, idx) {\n        upper = Math.max(upper, props.yAccessor(val));\n        xValues.push(props.xAccessor(val));\n        yValues.push(props.yAccessor(val));\n      });\n      yMaxValues.push(upper);\n    });\n    var xScale;\n\n    if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]' && props.xAxisTickInterval) {\n      xScale = d3.time.scale().range([0, innerWidth]);\n    } else {\n      xScale = d3.scale.linear().range([0, innerWidth]);\n    }\n\n    xScale.domain(d3.extent(xValues));\n    yScale.domain([0, d3.sum(yMaxValues)]);\n    props.colors.domain(seriesNames);\n    var stack = d3.layout.stack().x(props.xAccessor).y(props.yAccessor).values(function (d) {\n      return d.values;\n    });\n    var layers = stack(data);\n    var trans = \"translate(\" + props.margins.left + \",\" + props.margins.top + \")\";\n    var dataSeries = layers.map(function (d, idx) {\n      return React.createElement(DataSeries, {\n        key: idx,\n        seriesName: d.name,\n        fill: props.colors(props.colorAccessor(d, idx)),\n        index: idx,\n        xScale: xScale,\n        yScale: yScale,\n        data: d.values,\n        xAccessor: props.xAccessor,\n        yAccessor: props.yAccessor,\n        interpolationType: interpolationType,\n        hoverAnimation: props.hoverAnimation\n      });\n    });\n    return React.createElement(Chart, {\n      viewBox: this.getViewBox(),\n      legend: props.legend,\n      data: data,\n      margins: props.margins,\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      width: props.width,\n      height: props.height,\n      title: props.title\n    }, React.createElement(\"g\", {\n      transform: trans,\n      className: props.className\n    }, React.createElement(XAxis, {\n      xAxisClassName: \"rd3-areachart-xaxis\",\n      xScale: xScale,\n      xAxisTickValues: props.xAxisTickValues,\n      xAxisTickInterval: props.xAxisTickInterval,\n      xAxisTickCount: props.xAxisTickCount,\n      xAxisLabel: props.xAxisLabel,\n      xAxisLabelOffset: props.xAxisLabelOffset,\n      tickFormatting: props.xAxisFormatter,\n      xOrient: props.xOrient,\n      yOrient: props.yOrient,\n      margins: props.margins,\n      width: innerWidth,\n      height: innerHeight,\n      gridVertical: props.gridVertical,\n      gridVerticalStroke: props.gridVerticalStroke,\n      gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n      gridVerticalStrokeDash: props.gridVerticalStrokeDash\n    }), React.createElement(YAxis, {\n      yAxisClassName: \"rd3-areachart-yaxis\",\n      yScale: yScale,\n      yAxisTickValues: props.yAxisTickValues,\n      yAxisTickInterval: props.yAxisTickInterval,\n      yAxisTickCount: props.yAxisTickCount,\n      yAxisLabel: props.yAxisLabel,\n      yAxisLabelOffset: props.yAxisLabelOffset,\n      tickFormatting: props.yAxisFormatter,\n      xOrient: props.xOrient,\n      yOrient: props.yOrient,\n      margins: props.margins,\n      width: innerWidth,\n      height: props.height,\n      gridHorizontal: props.gridHorizontal,\n      gridHorizontalStroke: props.gridHorizontalStroke,\n      gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n      gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n    }), dataSeries));\n  }\n});","map":{"version":3,"sources":["/Users/Susan/Desktop/covidata/my-app/node_modules/react-d3/areachart/AreaChart.js"],"names":["React","require","d3","DataSeries","$__0","Chart","XAxis","YAxis","$__1","CartesianChartPropsMixin","ViewBoxMixin","module","exports","createClass","mixins","displayName","propTypes","margins","PropTypes","object","interpolate","bool","interpolationType","string","hoverAnimation","getDefaultProps","top","right","bottom","left","yAxisTickCount","className","render","props","data","innerWidth","innerHeight","getOuterDimensions","width","height","Array","isArray","yScale","scale","linear","range","xValues","yValues","seriesNames","yMaxValues","forEach","series","upper","push","name","values","val","idx","Math","max","yAccessor","xAccessor","xScale","length","Object","prototype","toString","call","xAxisTickInterval","time","domain","extent","sum","colors","stack","layout","x","y","d","layers","trans","dataSeries","map","createElement","key","seriesName","fill","colorAccessor","index","viewBox","getViewBox","legend","title","transform","xAxisClassName","xAxisTickValues","xAxisTickCount","xAxisLabel","xAxisLabelOffset","tickFormatting","xAxisFormatter","xOrient","yOrient","gridVertical","gridVerticalStroke","gridVerticalStrokeWidth","gridVerticalStrokeDash","yAxisClassName","yAxisTickValues","yAxisTickInterval","yAxisLabel","yAxisLabelOffset","yAxisFormatter","gridHorizontal","gridHorizontalStroke","gridHorizontalStrokeWidth","gridHorizontalStrokeDash"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar DataSeries = require('./DataSeries');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'AreaChart',\n\n  propTypes: {\n    margins:           React.PropTypes.object,\n    interpolate:       React.PropTypes.bool,\n    interpolationType: React.PropTypes.string,\n    hoverAnimation:    React.PropTypes.bool,\n },\n\n  getDefaultProps:function() {\n    return {\n      margins: {top: 10, right: 20, bottom: 40, left: 45},\n      yAxisTickCount: 4,\n      interpolate: false,\n      interpolationType: null,\n      className: 'rd3-areachart',\n      hoverAnimation: true\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var data = props.data;\n\n    var interpolationType = props.interpolationType || (props.interpolate ? 'cardinal' : 'linear');\n\n    // Calculate inner chart dimensions\n    var innerWidth, innerHeight;\n    innerWidth = this.getOuterDimensions().width - props.margins.left - props.margins.right;\n    innerHeight = this.getOuterDimensions().height - props.margins.top - props.margins.bottom;\n\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    var yScale = d3.scale.linear()\n      .range([innerHeight, 0]);\n\n    var xValues = [];\n    var yValues = [];\n    var seriesNames = [];\n    var yMaxValues = [];\n    data.forEach( function(series)  {\n      var upper = 0;\n      seriesNames.push(series.name);\n      series.values.forEach(function(val, idx)  {\n        upper = Math.max(upper, props.yAccessor(val));\n        xValues.push(props.xAccessor(val));\n        yValues.push(props.yAccessor(val));\n      });\n      yMaxValues.push(upper);\n    });\n\n    var xScale;\n    if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]' && props.xAxisTickInterval) {\n      xScale = d3.time.scale()\n        .range([0, innerWidth]);\n    } else {\n      xScale = d3.scale.linear()\n        .range([0, innerWidth]);\n    }\n\n    xScale.domain(d3.extent(xValues));\n    yScale.domain([0, d3.sum(yMaxValues)]);\n\n    props.colors.domain(seriesNames);\n\n    var stack = d3.layout.stack()\n      .x(props.xAccessor)\n      .y(props.yAccessor)\n      .values(function(d) { return d.values; });\n\n    var layers = stack(data);\n\n    var trans = (\"translate(\" +  props.margins.left + \",\" +  props.margins.top + \")\");\n\n    var dataSeries = layers.map( function(d, idx)  {\n      return (\n          React.createElement(DataSeries, {\n            key: idx, \n            seriesName: d.name, \n            fill: props.colors(props.colorAccessor(d, idx)), \n            index: idx, \n            xScale: xScale, \n            yScale: yScale, \n            data: d.values, \n            xAccessor: props.xAccessor, \n            yAccessor: props.yAccessor, \n            interpolationType: interpolationType, \n            hoverAnimation: props.hoverAnimation}\n          )\n        );\n      });\n\n    return (\n      React.createElement(Chart, {\n        viewBox: this.getViewBox(), \n        legend: props.legend, \n        data: data, \n        margins: props.margins, \n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        width: props.width, \n        height: props.height, \n        title: props.title\n      }, \n        React.createElement(\"g\", {transform: trans, className: props.className}, \n          React.createElement(XAxis, {\n            xAxisClassName: \"rd3-areachart-xaxis\", \n            xScale: xScale, \n            xAxisTickValues: props.xAxisTickValues, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisTickCount: props.xAxisTickCount, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            tickFormatting: props.xAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: innerHeight, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            yAxisClassName: \"rd3-areachart-yaxis\", \n            yScale: yScale, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisTickInterval: props.yAxisTickInterval, \n            yAxisTickCount: props.yAxisTickCount, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            tickFormatting: props.yAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: props.height, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          dataSeries\n        )\n      )\n    );\n  }\n\n});\n"]},"metadata":{},"sourceType":"script"}