{"ast":null,"code":"var d3 = require('d3');\n\nexports.calculateScales = function (chartWidth, chartHeight, xValues, yValues) {\n  var xScale, yScale;\n\n  if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]') {\n    xScale = d3.time.scale().range([0, chartWidth]);\n  } else {\n    xScale = d3.scale.linear().range([0, chartWidth]);\n  }\n\n  xScale.domain(d3.extent(xValues));\n\n  if (yValues.length > 0 && Object.prototype.toString.call(yValues[0]) === '[object Date]') {\n    yScale = d3.time.scale().range([chartHeight, 0]);\n  } else {\n    yScale = d3.scale.linear().range([chartHeight, 0]);\n  }\n\n  yScale.domain(d3.extent(yValues));\n  return {\n    xScale: xScale,\n    yScale: yScale\n  };\n}; // debounce from Underscore.js\n// MIT License: https://raw.githubusercontent.com/jashkenas/underscore/master/LICENSE\n// Copyright (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative\n// Reporters & Editors\n\n\nexports.debounce = function (func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.flattenData = function (data, xAccessor, yAccessor) {\n  var allValues = [];\n  var xValues = [];\n  var yValues = [];\n  var coincidentCoordinateCheck = {};\n  data.forEach(function (series, i) {\n    series.values.forEach(function (item, j) {\n      var x = xAccessor(item); // Check for NaN since d3's Voronoi cannot handle NaN values\n      // Go ahead and Proceed to next iteration since we don't want NaN\n      // in allValues or in xValues or yValues\n\n      if (isNaN(x)) {\n        return;\n      }\n\n      xValues.push(x);\n      var y = yAccessor(item); // when yAccessor returns an object (as in the case of candlestick)\n      // iterate over the keys and push all the values to yValues array\n\n      var yNode;\n\n      if (typeof y === 'object' && Object.keys(y).length > 0) {\n        Object.keys(y).forEach(function (key) {\n          // Check for NaN since d3's Voronoi cannot handle NaN values\n          // Go ahead and Proceed to next iteration since we don't want NaN\n          // in allValues or in xValues or yValues\n          if (isNaN(y[key])) {\n            return;\n          }\n\n          yValues.push(y[key]); // if multiple y points are to be plotted for a single x\n          // as in the case of candlestick, default to y value of 0\n\n          yNode = 0;\n        });\n      } else {\n        // Check for NaN since d3's Voronoi cannot handle NaN values\n        // Go ahead and Proceed to next iteration since we don't want NaN\n        // in allValues or in xValues or yValues\n        if (isNaN(y)) {\n          return;\n        }\n\n        yValues.push(y);\n        yNode = y;\n      }\n\n      var xyCoords = x + \"-\" + yNode;\n\n      if (coincidentCoordinateCheck.hasOwnProperty(xyCoords)) {\n        // Proceed to next iteration if the x y pair already exists\n        // d3's Voronoi cannot handle NaN values or coincident coords\n        // But we push them into xValues and yValues above because\n        // we still may handle them there (labels, etc.)\n        return;\n      }\n\n      coincidentCoordinateCheck[xyCoords] = '';\n      var pointItem = {\n        coord: {\n          x: x,\n          y: yNode\n        },\n        d: item,\n        id: series.name + j,\n        series: series,\n        seriesIndex: i\n      };\n      allValues.push(pointItem);\n    });\n  });\n  return {\n    allValues: allValues,\n    xValues: xValues,\n    yValues: yValues\n  };\n};\n\nexports.shade = function (hex, percent) {\n  var R, G, B, red, green, blue, number;\n  var min = Math.min,\n      round = Math.round;\n\n  if (hex.length !== 7) {\n    return hex;\n  }\n\n  number = parseInt(hex.slice(1), 16);\n  R = number >> 16;\n  G = number >> 8 & 0xFF;\n  B = number & 0xFF;\n  red = min(255, round((1 + percent) * R)).toString(16);\n  if (red.length === 1) red = '0' + red;\n  green = min(255, round((1 + percent) * G)).toString(16);\n  if (green.length === 1) green = '0' + green;\n  blue = min(255, round((1 + percent) * B)).toString(16);\n  if (blue.length === 1) blue = '0' + blue;\n  return \"#\" + red + green + blue;\n};","map":{"version":3,"sources":["/Users/Susan/Desktop/covidata/my-app/node_modules/react-d3/utils/index.js"],"names":["d3","require","exports","calculateScales","chartWidth","chartHeight","xValues","yValues","xScale","yScale","length","Object","prototype","toString","call","time","scale","range","linear","domain","extent","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","flattenData","data","xAccessor","yAccessor","allValues","coincidentCoordinateCheck","forEach","series","i","values","item","j","x","isNaN","push","y","yNode","keys","key","xyCoords","hasOwnProperty","pointItem","coord","d","id","name","seriesIndex","shade","hex","percent","R","G","B","red","green","blue","number","min","Math","round","parseInt","slice"],"mappings":"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","sourcesContent":["var d3 = require('d3');\n\n\nexports.calculateScales = function(chartWidth, chartHeight, xValues, yValues)  {\n\n  var xScale, yScale;\n\n  if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]') {\n    xScale = d3.time.scale()\n      .range([0, chartWidth]);\n  } else {\n    xScale = d3.scale.linear()\n      .range([0, chartWidth]);\n  }\n  xScale.domain(d3.extent(xValues));\n\n  if (yValues.length > 0 && Object.prototype.toString.call(yValues[0]) === '[object Date]') {\n    yScale = d3.time.scale()\n      .range([chartHeight, 0]);\n  } else {\n    yScale = d3.scale.linear()\n      .range([chartHeight, 0]);\n  }\n\n  yScale.domain(d3.extent(yValues));\n\n  return {\n    xScale: xScale,\n    yScale: yScale\n  };\n\n};\n\n// debounce from Underscore.js\n// MIT License: https://raw.githubusercontent.com/jashkenas/underscore/master/LICENSE\n// Copyright (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative\n// Reporters & Editors\nexports.debounce = function(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.flattenData = function(data, xAccessor, yAccessor)  {\n\n  var allValues = [];\n  var xValues = [];\n  var yValues = [];\n  var coincidentCoordinateCheck = {};\n\n  data.forEach( function(series, i)  {\n    series.values.forEach( function(item, j)  {\n\n      var x = xAccessor(item);\n\n      // Check for NaN since d3's Voronoi cannot handle NaN values\n      // Go ahead and Proceed to next iteration since we don't want NaN\n      // in allValues or in xValues or yValues\n      if (isNaN(x)) {\n        return;\n      }\n      xValues.push(x);\n\n      var y = yAccessor(item);\n      // when yAccessor returns an object (as in the case of candlestick)\n      // iterate over the keys and push all the values to yValues array\n      var yNode;\n      if (typeof y === 'object' && Object.keys(y).length > 0) {\n        Object.keys(y).forEach(function (key) {\n          // Check for NaN since d3's Voronoi cannot handle NaN values\n          // Go ahead and Proceed to next iteration since we don't want NaN\n          // in allValues or in xValues or yValues\n          if (isNaN(y[key])) {\n            return;\n          }\n          yValues.push(y[key]);\n          // if multiple y points are to be plotted for a single x\n          // as in the case of candlestick, default to y value of 0\n          yNode = 0;\n        });\n      } else {\n        // Check for NaN since d3's Voronoi cannot handle NaN values\n        // Go ahead and Proceed to next iteration since we don't want NaN\n        // in allValues or in xValues or yValues\n        if (isNaN(y)) {\n          return;\n        }\n        yValues.push(y);\n        yNode = y;\n      }\n\n      var xyCoords = (x + \"-\" + yNode);\n      if (coincidentCoordinateCheck.hasOwnProperty(xyCoords)) {\n        // Proceed to next iteration if the x y pair already exists\n        // d3's Voronoi cannot handle NaN values or coincident coords\n        // But we push them into xValues and yValues above because\n        // we still may handle them there (labels, etc.)\n        return;\n      }\n      coincidentCoordinateCheck[xyCoords] = '';\n\n      var pointItem = {\n        coord: {\n          x: x,\n          y: yNode,\n        },\n        d: item,\n        id: series.name + j,\n        series: series,\n        seriesIndex: i\n      };\n      allValues.push(pointItem);\n    });\n  });\n\n  return {\n    allValues: allValues,\n    xValues: xValues,\n    yValues: yValues\n  };\n};\n\n\nexports.shade = function(hex, percent)  {\n\n  var R, G, B, red, green, blue, number;\n  var min = Math.min, round = Math.round;\n  if(hex.length !== 7) { return hex; }\n  number = parseInt(hex.slice(1), 16);\n  R = number >> 16;\n  G = number >> 8 & 0xFF;\n  B = number & 0xFF;\n  red = min( 255, round( ( 1 + percent ) * R )).toString(16);\n  if (red.length === 1) red = '0' + red;\n  green = min( 255, round( ( 1 + percent ) * G )).toString(16);\n  if (green.length === 1) green = '0' + green;\n  blue = min( 255, round( ( 1 + percent ) * B )).toString(16);\n  if (blue.length === 1) blue = '0' + blue;\n  return (\"#\" +  red +  green +  blue);\n\n};\n"]},"metadata":{},"sourceType":"script"}