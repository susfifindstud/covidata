{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar $__0 = require('../common'),\n    Chart = $__0.Chart,\n    XAxis = $__0.XAxis,\n    YAxis = $__0.YAxis;\n\nvar DataSeries = require('./DataSeries');\n\nvar utils = require('../utils');\n\nvar $__1 = require('../mixins'),\n    CartesianChartPropsMixin = $__1.CartesianChartPropsMixin,\n    ViewBoxMixin = $__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n  mixins: [CartesianChartPropsMixin, ViewBoxMixin],\n  displayName: 'ScatterChart',\n  propTypes: {\n    circleRadius: React.PropTypes.number,\n    className: React.PropTypes.string,\n    hoverAnimation: React.PropTypes.bool,\n    margins: React.PropTypes.object,\n    xAxisClassName: React.PropTypes.string,\n    xAxisStrokeWidth: React.PropTypes.number,\n    yAxisClassName: React.PropTypes.string,\n    yAxisStrokeWidth: React.PropTypes.number\n  },\n  getDefaultProps: function () {\n    return {\n      circleRadius: 3,\n      className: 'rd3-scatterchart',\n      hoverAnimation: true,\n      margins: {\n        top: 10,\n        right: 20,\n        bottom: 50,\n        left: 45\n      },\n      xAxisClassName: 'rd3-scatterchart-xaxis',\n      xAxisStrokeWidth: 1,\n      yAxisClassName: 'rd3-scatterchart-yaxis',\n      yAxisStrokeWidth: 1\n    };\n  },\n  _calculateScales: utils.calculateScales,\n  render: function () {\n    var props = this.props;\n    var data = props.data;\n    var margins = props.margins;\n\n    if (!data || data.length < 1) {\n      return null;\n    } // Calculate inner chart dimensions\n\n\n    var innerWidth = this.getOuterDimensions().width - margins.left - margins.right;\n    var innerHeight = this.getOuterDimensions().height - margins.top - margins.bottom; // Returns an object of flattened allValues, xValues, and yValues\n\n    var flattenedData = utils.flattenData(data, props.xAccessor, props.yAccessor);\n    var allValues = flattenedData.allValues,\n        xValues = flattenedData.xValues,\n        yValues = flattenedData.yValues;\n\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues);\n\n    var xScale = scales.xScale;\n    var yScale = scales.yScale;\n    var x = props.yAxisOffset < 0 ? margins.left + Math.abs(props.yAxisOffset) : margins.left;\n    var transform = \"translate(\" + x + \", \" + margins.top + \")\";\n    return React.createElement(Chart, {\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      data: data,\n      height: props.height,\n      legend: props.legend,\n      margins: margins,\n      title: props.title,\n      viewBox: this.getViewBox(),\n      width: props.width\n    }, React.createElement(\"g\", {\n      className: props.className,\n      transform: transform\n    }, React.createElement(XAxis, {\n      data: data,\n      height: innerHeight,\n      margins: margins,\n      stroke: props.axesColor,\n      strokeWidth: props.xAxisStrokeWidth.toString(),\n      tickFormatting: props.xAxisFormatter,\n      width: innerWidth,\n      xAxisClassName: props.xAxisClassName,\n      xAxisLabel: props.xAxisLabel,\n      xAxisLabelOffset: props.xAxisLabelOffset,\n      xAxisOffset: props.xAxisOffset,\n      xAxisTickInterval: props.xAxisTickInterval,\n      xAxisTickValues: props.xAxisTickValues,\n      xOrient: props.xOrient,\n      yOrient: props.yOrient,\n      xScale: xScale,\n      gridVertical: props.gridVertical,\n      gridVerticalStroke: props.gridVerticalStroke,\n      gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n      gridVerticalStrokeDash: props.gridVerticalStrokeDash\n    }), React.createElement(YAxis, {\n      data: data,\n      width: innerWidth,\n      height: innerHeight,\n      margins: margins,\n      stroke: props.axesColor,\n      strokeWidth: props.yAxisStrokeWidth.toString(),\n      tickFormatting: props.yAxisFormatter,\n      yAxisClassName: props.yAxisClassName,\n      yAxisLabel: props.yAxisLabel,\n      yAxisLabelOffset: props.yAxisLabelOffset,\n      yAxisOffset: props.yAxisOffset,\n      yAxisTickValues: props.yAxisTickValues,\n      yAxisTickCount: props.yAxisTickCount,\n      yScale: yScale,\n      xOrient: props.xOrient,\n      yOrient: props.yOrient,\n      gridHorizontal: props.gridHorizontal,\n      gridHorizontalStroke: props.gridHorizontalStroke,\n      gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n      gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n    }), React.createElement(DataSeries, {\n      circleRadius: props.circleRadius,\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      data: allValues,\n      height: innerHeight,\n      hoverAnimation: props.hoverAnimation,\n      width: innerWidth,\n      xAccessor: props.xAccessor,\n      xScale: xScale,\n      yAccessor: props.yAccessor,\n      yScale: yScale\n    })));\n  }\n});","map":{"version":3,"sources":["/Users/Susan/Desktop/covidata/my-app/node_modules/react-d3/scatterchart/ScatterChart.js"],"names":["React","require","d3","$__0","Chart","XAxis","YAxis","DataSeries","utils","$__1","CartesianChartPropsMixin","ViewBoxMixin","module","exports","createClass","mixins","displayName","propTypes","circleRadius","PropTypes","number","className","string","hoverAnimation","bool","margins","object","xAxisClassName","xAxisStrokeWidth","yAxisClassName","yAxisStrokeWidth","getDefaultProps","top","right","bottom","left","_calculateScales","calculateScales","render","props","data","length","innerWidth","getOuterDimensions","width","innerHeight","height","flattenedData","flattenData","xAccessor","yAccessor","allValues","xValues","yValues","scales","xScale","yScale","x","yAxisOffset","Math","abs","transform","createElement","colors","colorAccessor","legend","title","viewBox","getViewBox","stroke","axesColor","strokeWidth","toString","tickFormatting","xAxisFormatter","xAxisLabel","xAxisLabelOffset","xAxisOffset","xAxisTickInterval","xAxisTickValues","xOrient","yOrient","gridVertical","gridVerticalStroke","gridVerticalStrokeWidth","gridVerticalStrokeDash","yAxisFormatter","yAxisLabel","yAxisLabelOffset","yAxisTickValues","yAxisTickCount","gridHorizontal","gridHorizontalStroke","gridHorizontalStrokeWidth","gridHorizontalStrokeDash"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'ScatterChart',\n\n  propTypes: {\n    circleRadius:     React.PropTypes.number,\n    className:        React.PropTypes.string,\n    hoverAnimation:   React.PropTypes.bool,\n    margins:          React.PropTypes.object,\n    xAxisClassName:   React.PropTypes.string,\n    xAxisStrokeWidth: React.PropTypes.number,\n    yAxisClassName:   React.PropTypes.string,\n    yAxisStrokeWidth: React.PropTypes.number\n },\n\n  getDefaultProps:function() {\n    return {\n      circleRadius:     3,\n      className:        'rd3-scatterchart',\n      hoverAnimation:   true,\n      margins:          {top: 10, right: 20, bottom: 50, left: 45},\n      xAxisClassName:   'rd3-scatterchart-xaxis',\n      xAxisStrokeWidth: 1,\n      yAxisClassName:   'rd3-scatterchart-yaxis',\n      yAxisStrokeWidth: 1\n    };\n  },\n\n  _calculateScales: utils.calculateScales,\n\n  render:function() {\n\n    var props = this.props;\n    var data  = props.data;\n    var margins = props.margins;\n\n    if (!data || data.length < 1) {\n      return null;\n    }\n\n    // Calculate inner chart dimensions\n    var innerWidth  = this.getOuterDimensions().width - margins.left - margins.right;\n    var innerHeight = this.getOuterDimensions().height - margins.top - margins.bottom;\n\n    // Returns an object of flattened allValues, xValues, and yValues\n    var flattenedData = utils.flattenData(data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues,\n        xValues   = flattenedData.xValues,\n        yValues   = flattenedData.yValues;\n\n    var scales  = this._calculateScales(innerWidth, innerHeight, xValues, yValues);\n    var xScale  = scales.xScale;\n    var yScale  = scales.yScale;\n\n    var x = props.yAxisOffset < 0 ? (margins.left + Math.abs(props.yAxisOffset)) : margins.left;\n    var transform = (\"translate(\" + x + \", \" + margins.top + \")\");\n\n    return (\n      React.createElement(Chart, {\n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        data: data, \n        height: props.height, \n        legend: props.legend, \n        margins: margins, \n        title: props.title, \n        viewBox: this.getViewBox(), \n        width: props.width\n      }, \n        React.createElement(\"g\", {\n          className: props.className, \n          transform: transform\n        }, \n          React.createElement(XAxis, {\n            data: data, \n            height: innerHeight, \n            margins: margins, \n            stroke: props.axesColor, \n            strokeWidth: props.xAxisStrokeWidth.toString(), \n            tickFormatting: props.xAxisFormatter, \n            width: innerWidth, \n            xAxisClassName: props.xAxisClassName, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            xAxisOffset: props.xAxisOffset, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisTickValues: props.xAxisTickValues, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            xScale: xScale, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            data: data, \n            width: innerWidth, \n            height: innerHeight, \n            margins: margins, \n            stroke: props.axesColor, \n            strokeWidth: props.yAxisStrokeWidth.toString(), \n            tickFormatting: props.yAxisFormatter, \n            yAxisClassName: props.yAxisClassName, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            yAxisOffset: props.yAxisOffset, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisTickCount: props.yAxisTickCount, \n            yScale: yScale, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          React.createElement(DataSeries, {\n            circleRadius: props.circleRadius, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            data: allValues, \n            height: innerHeight, \n            hoverAnimation: props.hoverAnimation, \n            width: innerWidth, \n            xAccessor: props.xAccessor, \n            xScale: xScale, \n            yAccessor: props.yAccessor, \n            yScale: yScale}\n            )\n        )\n      )\n    );\n  }\n\n});\n"]},"metadata":{},"sourceType":"script"}